# Log file generated by
#
#   './configure --disable-hardening --disable-docs --disable-pulse --disable-opengl --disable-alsa --disable-java --disable-python --disable-sdl-ttf'
#

***** Checking environment *****
Determined build machine: linux.x86, target machine: linux.x86


***** Checking kBuild *****
found


***** Checking gcc *****
found version 4.5.2


***** Checking as86 *****
found version 0.16.17


***** Checking bcc *****
compiling the following source file:
int foo(a)
  int a;
{
  return 0;
}
using the following command line:
bcc -B /usr/bin/ -C-c -3 -S -o /usr/vm/VirtualBox-4.1.0_OSE/.tmp_out /usr/vm/VirtualBox-4.1.0_OSE/.tmp_src.c
found version 0.16.17


***** Checking iasl *****
found version 20100528


***** Checking xslt *****
found


***** Checking mkisofs *****
found genisoimage 1.1.11 (Linux)


***** Checking pthread *****
compiling the following source file:
#include <cstdio>
#include <pthread.h>
extern "C" int main(void)
{
  pthread_mutex_t mutex;
  if (pthread_mutex_init(&mutex, NULL)) {
    printf("pthread_mutex_init() failed\n");
    return 1;
  }
  if (pthread_mutex_lock(&mutex)) {
    printf("pthread_mutex_lock() failed\n");
    return 1;
  }
  if (pthread_mutex_unlock(&mutex)) {
    printf("pthread_mutex_unlock() failed\n");
    return 1;
  }
  printf("found, OK.\n");
}
using the following command line:
g++  -g -O -Wall -o /usr/vm/VirtualBox-4.1.0_OSE/.tmp_out /usr/vm/VirtualBox-4.1.0_OSE/.tmp_src.cc "-lpthread"
executing the binary
found, OK.


***** Checking libxml2 *****
compiling the following source file:
#include <cstdio>
#include <libxml/xmlversion.h>
extern "C" int main(void)
{
  printf("found version %s", LIBXML_DOTTED_VERSION);
#if LIBXML_VERSION >= 20626
  printf(", OK.\n");
  return 0;
#else
  printf(", expected version 2.6.26 or higher\n");
  return 1;
#endif
}
using the following command line:
g++  -g -O -Wall -o /usr/vm/VirtualBox-4.1.0_OSE/.tmp_out /usr/vm/VirtualBox-4.1.0_OSE/.tmp_src.cc "-lxml2   -lpthread -I/usr/include/libxml2"
executing the binary
found version 2.7.8, OK.


***** Checking libxslt *****
compiling the following source file:
#include <cstdio>
#include <libxslt/xsltconfig.h>
extern "C" int main(void)
{
  printf("found version %s", LIBXSLT_DOTTED_VERSION);
#if LIBXSLT_VERSION >= 10117
  printf(", OK.\n");
  return 0;
#else
  printf(", expected version 1.1.17 or higher\n");
  return 1;
#endif
}
using the following command line:
g++  -g -O -Wall -o /usr/vm/VirtualBox-4.1.0_OSE/.tmp_out /usr/vm/VirtualBox-4.1.0_OSE/.tmp_src.cc "-lxslt -lxml2   -lpthread -I/usr/include/libxml2"
executing the binary
found version 1.1.26, OK.


***** Checking libIDL *****
found version 0.8.14


***** Checking ssl *****
compiling the following source file:
#include <cstdio>
#include <openssl/opensslv.h>
#include <openssl/ssl.h>
extern "C" int main(void)
{
  printf("found version %s", OPENSSL_VERSION_TEXT);
  SSL_library_init();
#if OPENSSL_VERSION_NUMBER >= 0x00908000
  printf(", OK.\n");
  return 0;
#else
  printf(", expected version 0.9.8 or higher\n");
  return 1;
#endif
}
using the following command line:
g++  -g -O -Wall -o /usr/vm/VirtualBox-4.1.0_OSE/.tmp_out /usr/vm/VirtualBox-4.1.0_OSE/.tmp_src.cc " -lssl -lcrypto"
executing the binary
found version OpenSSL 0.9.8o 01 Jun 2010, OK.


***** Checking libcurl *****
compiling the following source file:
#include <cstdio>
#include <curl/curl.h>
extern "C" int main(void)
{
  printf("found version %s", LIBCURL_VERSION);
#if 10000*LIBCURL_VERSION_MAJOR + 100*LIBCURL_VERSION_MINOR + LIBCURL_VERSION_PATCH >= 71601
  printf(", OK.\n");
  return 0;
#else
  printf(", expected version 7.16.1 or higher\n");
  return 1;
#endif
}
using the following command line:
g++  -g -O -Wall -o /usr/vm/VirtualBox-4.1.0_OSE/.tmp_out /usr/vm/VirtualBox-4.1.0_OSE/.tmp_src.cc "-lcurl "
executing the binary
found version 7.21.3, OK.


***** Checking zlib *****
compiling the following source file:
#include <cstdio>
#include <zlib.h>
extern "C" int main(void)
{
  printf("found version %s", ZLIB_VERSION);
#if ZLIB_VERNUM >= 0x1210
  printf(", OK.\n");
  return 0;
#else
  printf(", expected version 1.2.1 or higher\n");
  return 1;
#endif
}
using the following command line:
g++  -g -O -Wall -o /usr/vm/VirtualBox-4.1.0_OSE/.tmp_out /usr/vm/VirtualBox-4.1.0_OSE/.tmp_src.cc "-lz "
executing the binary
found version 1.2.3.4, OK.


***** Checking libpng *****
compiling the following source file:
#include <cstdio>
#include <png.h>
extern "C" int main(void)
{
  printf("found version %s", PNG_LIBPNG_VER_STRING);
#if PNG_LIBPNG_VER >= 10205
  printf(", OK.\n");
  return 0;
#else
  printf(", expected version 1.2.5 or higher\n");
  return 1;
#endif
}
using the following command line:
g++  -g -O -Wall -o /usr/vm/VirtualBox-4.1.0_OSE/.tmp_out /usr/vm/VirtualBox-4.1.0_OSE/.tmp_src.cc "-lpng "
executing the binary
found version 1.2.44, OK.


***** Checking SDL *****
compiling the following source file:
#include <cstdio>
#include <SDL.h>
#include <SDL_main.h>
#undef main
extern "C" int main(int argc, char** argv)
{
  printf("found version %d.%d.%d",
         SDL_MAJOR_VERSION, SDL_MINOR_VERSION, SDL_PATCHLEVEL);
#if SDL_VERSION_ATLEAST(1,2,7)
  printf(", OK.\n");
  return 0;
#else
  printf(", expected version 1.2.7 or higher\n");
  return 1;
#endif
}
using the following command line:
g++  -g -O -Wall -o /usr/vm/VirtualBox-4.1.0_OSE/.tmp_out /usr/vm/VirtualBox-4.1.0_OSE/.tmp_src.cc "-L/usr/lib -lSDL  -I/usr/include/SDL "
executing the binary
found version 1.2.14, OK.


***** Checking X libraries *****
compiling the following source file:
#include <cstdio>
#include <X11/Xlib.h>
extern "C" int main(void)
{
  Display *dpy;
  int scrn_num;
  Screen *scrn;
  Window win;

  dpy      = XOpenDisplay(NULL);
  scrn_num = DefaultScreen(dpy);
  scrn     = ScreenOfDisplay(dpy, scrn_num);
  win      = XCreateWindow(dpy, RootWindowOfScreen(scrn), 0, 0, 100, 100,
                           0, 16, InputOutput, CopyFromParent, 0, NULL);
  XDestroyWindow(dpy, win);
  XCloseDisplay(dpy);
}
using the following command line:
g++  -g -O -Wall -o /usr/vm/VirtualBox-4.1.0_OSE/.tmp_out /usr/vm/VirtualBox-4.1.0_OSE/.tmp_src.cc "-L/usr/X11R6/lib -L/usr/X11R6/lib64 -L/usr/local/lib -lXext -lX11 -I/usr/local/include"
found


***** Checking Xcursor *****
compiling the following source file:
#include <cstdio>
#include <X11/Xlib.h>
#include <X11/Xcursor/Xcursor.h>
extern "C" int main(void)
{
  XcursorImage *cursor = XcursorImageCreate (10, 10);
  XcursorImageDestroy(cursor);
  return 0;
}
using the following command line:
g++  -g -O -Wall -o /usr/vm/VirtualBox-4.1.0_OSE/.tmp_out /usr/vm/VirtualBox-4.1.0_OSE/.tmp_src.cc "-L/usr/X11R6/lib -L/usr/X11R6/lib64 -L/usr/local/lib -lXext -lX11 -lXcursor -I/usr/local/include"
found


***** Checking Xinerama *****
compiling the following source file:
#include <X11/Xlib.h>
#include <X11/extensions/Xinerama.h>
extern "C" int main(void)
{
  Display *dpy;
  Bool flag;
  dpy = XOpenDisplay(NULL);
  if (dpy)
  {
    flag = XineramaIsActive(dpy);
    XCloseDisplay(dpy);
  }
}
using the following command line:
g++  -g -O -Wall -o /usr/vm/VirtualBox-4.1.0_OSE/.tmp_out /usr/vm/VirtualBox-4.1.0_OSE/.tmp_src.cc "-L/usr/X11R6/lib -L/usr/X11R6/lib64 -L/usr/local/lib -lXext -lX11 -lXinerama -I/usr/local/include"
found


***** Checking Xrandr *****
compiling the following source file:
#include <X11/Xlib.h>
#include <X11/extensions/Xrandr.h>
extern "C" int main(void)
{
  Display *dpy;
  Bool flag;
  int major, minor;
  dpy = XOpenDisplay(NULL);
  if (dpy)
  {
    flag = XRRQueryVersion(dpy, &major, &minor);
    XCloseDisplay(dpy);
  }
}
using the following command line:
g++  -g -O -Wall -o /usr/vm/VirtualBox-4.1.0_OSE/.tmp_out /usr/vm/VirtualBox-4.1.0_OSE/.tmp_src.cc "-L/usr/X11R6/lib -L/usr/X11R6/lib64 -L/usr/local/lib -lXext -lX11 -lXrandr -I/usr/local/include"
found


***** Checking Qt4 *****
compiling the following source file:
#include <cstdio>
#include <QtGlobal>
extern "C" int main(void)
{
  printf("found version %s", QT_VERSION_STR);
#if QT_VERSION >= 0x040400
  printf(", OK.\n");
  return 0;
#else
  printf(", expected version 4.4.0 or higher\n");
  return 1;
#endif
}
using the following command line:
g++  -g -O -Wall -o /usr/vm/VirtualBox-4.1.0_OSE/.tmp_out /usr/vm/VirtualBox-4.1.0_OSE/.tmp_src.cc "-L/usr/lib -lQtCore   -lpthread -I/usr/include/qt4 -I/usr/include/qt4/QtCore -DQT_SHARED -I/usr/include/qt4 -I/usr/include/qt4/QtCore  "
executing the binary (LD_LIBRARY_PATH=/usr/lib)
found version 4.7.2, OK.


***** Checking Qt4 devtools *****
found version 4.7.2


***** Checking static stc++ library *****
compiling the following source file:
#include <string>

extern "C" int main(void)
{
  std::string s = "test";
  return 0;
}
using the following command line:
g++  -g -O -Wall -o /usr/vm/VirtualBox-4.1.0_OSE/.tmp_out /usr/vm/VirtualBox-4.1.0_OSE/.tmp_src.cc "/usr/lib/i386-linux-gnu/gcc/i686-linux-gnu/4.5.2/libstdc++.a"
found


***** Checking Linux kernel sources *****
compiling the following source file:
#include <linux/version.h>
int printf(const char *format, ...);
int main(void)
{
  printf("found version %d.%d.%d",  LINUX_VERSION_CODE / 65536,
                                   (LINUX_VERSION_CODE % 65536) / 256,
                                    LINUX_VERSION_CODE          % 256);
#if LINUX_VERSION_CODE > KERNEL_VERSION(2,4,0)
  printf(", OK.\n");
  return 0;
#else
  printf(", expected version 2.4.0 or higher\n");
  return 1;
#endif
}
using the following command line:
gcc -O -Wall -o /usr/vm/VirtualBox-4.1.0_OSE/.tmp_out /usr/vm/VirtualBox-4.1.0_OSE/.tmp_src.c -nostdinc -I/lib/modules/2.6.38-8-generic/build/include
executing the binary
found version 2.6.38, OK.


***** Checking libcap library *****
compiling the following source file:
#include <cstdio>
#include <sys/types.h>
#include <sys/capability.h>

extern "C" int main(void)
{
  char buf[1024];
  cap_t caps = cap_get_proc();
  snprintf(buf, sizeof(buf), "Current caps are '%s'\n", cap_to_text(caps, NULL));
  return 0;
}
using the following command line:
g++  -g -O -Wall -o /usr/vm/VirtualBox-4.1.0_OSE/.tmp_out /usr/vm/VirtualBox-4.1.0_OSE/.tmp_src.cc "-lcap"
executing the binary


found


***** Checking compiler.h *****
compiler.h not found


***** Checking makeself *****
found version 2.1.5


